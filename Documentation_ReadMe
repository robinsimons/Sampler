Issues
======

If ABC generations complete faster than the reporting operations (e.g. running an R script) 
then the entire application may quit before reporting has caught up.

When creating the ScalaDoc with API the index page for the root of the project shows two packages, akka and sampler, where we would prefer it
to lead directly to sampler package

Future Enhancements
===================

Allow ABC tolerance to be configured from config file, e.g. descent rate can be quantile other than 50%

Building documentation
======================

1) Create the documentation on your local machine using either either the doc or unidoc commands in sbt.

	The documentation folder will be created in the target directory; e.g. target/scala-2.10/unidoc/

2) Rename the folder according to the current build e.g. Sampler-0.0.21 and move to the api folder in the gh-pages branch

3) Once pushed, the documentation will be available at tearne.github.io e.g.
	
	tearne.github.io/Sampler/api/Sampler-0.0.21

Troubleshooting
===============

To run the examples within Eclipse the src/main/resources folder needs to be added as a source folder so that config files can be detected

R pre-requisites (for examples)
===============================

install.packages(c("ggplot2", "reshape", "deSolve", "hexbin"), dependencies=T)

Eclipse / sbt
=============

Trying to make project testable from SBT and Eclipse. SBT Eclipse plug-in sets up Eclipse project. Misses out on 
1) in Examples doesn't add src/main/resources to 
the build path, therefore none of the examples can find their configuration files. Fixed by Right-click and add to buid-path. 
2) Default testing - relative file paths in tests when needing test data e.g. Paths.get("src", "test", "resources" etc). Tjhis worked in eclipse since
resolves paths from project directory. Not in SBT. If we use Paths.get(getClass.getClassLoader.getResource("data/SOMEFILE.txt").toURI()) then Eclipse
still doesn't find it because src/test/resources isn't on build path. We can add it as in (1) but it won't get put in correct class folder. Right-click. add to build
path, go to build settings, change output directory for resources from default to relative to target/scala2-10/test-classes